Syntax:
switch expression {
case value_1:
  //execute when expression equals to value_1
case value_2:
  //execute when expression equals to value_2
default:
  //execute when no match is found
}

package main
import "fmt"
func main() {
     var i int = 100
     switch i {
         case 10:
            fmt.Println("i is 10")
         case 100, 200:
            fmt.Println("i is either 0, 100 or 200")
         default:
            fmt.Println("i is neither 0, 100 or 200")
      }
 }
 >>> go run main.go
 i is either 100 or 200


package main
import "fmt"
func main() {
        var a, b = 100, 5
        switch {
        case a/b == 10:
                fmt.Println("10")
        case a/b == 20:
                fmt.Println("20")
        case a/b == 10:
                fmt.Println("30")
        default:
                fmt.Println("default")
        }

}
>>> go run main.go
20 


package main
import "fmt"
func main() {
        day := "sunday"
        switch day {
        case "monday":
                fmt.Println("monday")
        case "tuesday":
                fmt.Println("tuesday")
        case "wednesday":
                fmt.Println("wednesday")
        case "thursday":
                fmt.Println("thursday")
        case "friday":
                fmt.Println("friday")
        case "saturday", "sunday":
                fmt.Println("weekend")
        default:
                fmt.Println("default")
        }

}
>>> go run main.go
weekend


package main
import "fmt"
func main() {
     var i int = 800
     switch i {
         case 10:
            fmt.Println("i is 10")
         case 100, 200:
            fmt.Println("i is either 0, 100 or 200")
         default:
            fmt.Println("i is neither 0, 100 or 200")
      }
 }
 >>> go run main.go
 i is neither 0, 100 or 200
 
 
#fallthrough. The fallthrough keyword is used in switch-case to force the execution flow to fall through the successive case block
package main
import "fmt"
func main() {
     var i int = 10
     switch i {
         case -5:
            fmt.Println("-5")
         case 10:
            fmt.Println("10")
            fallthrough
         case 20:
            fmt.Println("20")
            fallthrough
         default:
            fmt.Println("default")
      }
 }
 >>> go run main.go
10
20
default


package main
import "fmt"
func main() {
        day := "wednesday"
        switch day {
        case "monday":
                fmt.Println("monday")
        case "tuesday":
                fmt.Println("tuesday")
        case "wednesday":
                fmt.Println("wednesday")
                fallthrough
        case "thursday":
                fmt.Println("thursday")
                fallthrough
        case "friday":
                fmt.Println("friday")
        case "saturday", "sunday":
                fmt.Println("weekend")
        default:
                fmt.Println("default")
        }

}
>>> go run main.go
wednesday
thursday
friday


#switch with conditions
switch expression {
case condition_1:
  //execute when condition_1 is true
case condition_2:
  //execute when condition_2 is true
default:
  //execute when no condition is true
}

package main
import "fmt"
func main() {
     var a, b int = 10, 20
     switch {
         case a+b == 30:
            fmt.Println("equal to 30") 
         case a+b <= 30:
            fmt.Println("less than or equal to 30") #abu atitinka, bet kodas sustuoja ties pirmu sprendimu
         default:
            fmt.Println("greater than 30")
      }
 }
 >>> go run main.go
equal to 30


package main
import "fmt"
func main() {
        var a, b = 100, 5
        switch a {
        case a/b == 10:
                fmt.Println("10")
        case a/b == 20:
                fmt.Println("20")
        case a/b == 10:
                fmt.Println("30")
        default:
                fmt.Println("default")
        }

}
 >>> go run main.go
 Error
 
 
package main
import "fmt"
func main() {
        var i, j = 10, 50

        switch {
        case i+j == 60:
                fmt.Println("equal to 60")
        case i+j <= 60:
                fmt.Println("less than or equal to 60")
                fallthrough
        default:
                fmt.Println("greater than 60")
        }

}
>>> go run main.go
equal to 60
