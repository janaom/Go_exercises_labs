Syntax:
for initialization; condition; post {
  //statements
}

example: 
for i := 1; i <= 3; i++ {
  fmt.Println("Hello World")
}

package main
import "fmt"
func main() {
     for i := 1; i <= 5; i++ {
         fmt.Println(i*i)
     }
}
>>>go run main.go
1
4
9
16
25


package main
import "fmt"
func main() {
     i := 1
     for i <= 5 {
         fmt.Println(i*i)
         i += 1
     }
}
>>>go run main.go
1
4
9
16
25

package main
import "fmt"
func main() {
     sum := 0  #infinitive loop
     for {
         sum++ //repeated forever
      }
      fmt.Println(sum) //never reached
 }
 
 
package main
import "fmt"
func main() {
        for {
                fmt.Println("Hello World!")
        }
} 
>>> go run main.go
Infinitive loop


package main
import "fmt"
func main() {
        i := 3
        for i > 10 {   #3 is not more than 10
                fmt.Println(i * 2)
                i += 1
        }
}
>>> go run main.go
No output


package main
import "fmt"
func main() {
        i := 5
        j := 0
        for j < 5 {
                fmt.Println(i * 2)
                j += 1
        }
}
>>> go run main.go
10
10
10
10
10


#the break statement ends the loop immediately when it is encountered
package main
import "fmt"
func main() {
     for i := 1; i <= 5; i++ {
        if i == 3 {
           break
        }
        fmt.Println(i)
  }
  >>> go run main.go
  1
  2
  
  
package main
import "fmt"
func main() {
        for i := 0; i <= 5; i++ {
                fmt.Println(i * i)
                if i == 3 {
                        break
                }
        }
}
>>> go run main.go
0
1
4
9


  #continue statement
  #the continue statement skips the current iteration of loop and continues with the next iteration
  
  package main
  import "fmt"
  func main() {
       for i := 1; i <= 5; i++ {
          if i == 3 {   #3 will be skipped
             continue
          }
          fmt.Println(i)
       }
   }
 >>> go run main.go
   1
   2
   4
   5


package main
import "fmt"
func main() {
        for i := 0; i <= 5; i++ {
                fmt.Println(i * i)
                if i == 3 {
                        continue
                }
        }
 >>> go run main.go
 0
 1
 4
 9
 16
 25
